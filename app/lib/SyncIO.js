// Generated by CoffeeScript 1.6.3
(function() {
  var Relay, SyncIO, SyncServer, Tracker, WebServer, devnull, errors, fs, pjson;

  fs = require('fs');

  devnull = require('devnull');

  pjson = require('../../package.json');

  errors = require('./utils/errors');

  Tracker = require('./Tracker');

  Relay = require('./Relay');

  SyncServer = require('./SyncServer');

  WebServer = require('./WebServer');

  module.exports = SyncIO = (function() {
    function SyncIO() {
      this._tracker = new Tracker(this);
      this._relay = new Relay(this);
      this.initializeLogging();
    }

    SyncIO.prototype.initializeLogging = function() {
      var _ref;
      this._logger = new devnull({
        namespacing: 0,
        level: ((_ref = process.env.NODE_ENV) != null ? _ref.toLowerCase() : void 0) === 'debug' ? 8 : 7
      });
      this._logger.warning('--- sync.io v' + pjson.version + ' by Pascal Mathis <dev@snapserv.net> ---');
      return this._logger.warning('This application is unofficial and not affiliated or related to BitTorrent, Inc.');
    };

    SyncIO.prototype.loadConfig = function(configFile) {
      var configData, err;
      try {
        configData = fs.readFileSync(configFile);
        return this._config = JSON.parse(configData);
      } catch (_error) {
        err = _error;
        throw new errors.ConfigurationError('Could not load configuration file!\n' + err);
      }
    };

    SyncIO.prototype.run = function() {
      var _ref, _ref1, _ref2, _ref3;
      this._webServer = new WebServer(this);
      this._webServer.listen((_ref = this._config.webServerPort) != null ? _ref : 4000, (_ref1 = this._config.webServerAddress) != null ? _ref1 : null);
      this._syncServer = new SyncServer(this);
      return this._syncServer.listen((_ref2 = this._config.syncServerPort) != null ? _ref2 : 3000, (_ref3 = this._config.syncServerAddress) != null ? _ref3 : null);
    };

    SyncIO.prototype.getConfig = function() {
      return this._config;
    };

    SyncIO.prototype.getLogger = function() {
      return this._logger;
    };

    SyncIO.prototype.getTracker = function() {
      return this._tracker;
    };

    SyncIO.prototype.getRelay = function() {
      return this._relay;
    };

    SyncIO.prototype.getWebServer = function() {
      return this._webServer;
    };

    SyncIO.prototype.getSyncServer = function() {
      return this._syncServer;
    };

    return SyncIO;

  })();

}).call(this);
