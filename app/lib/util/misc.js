// Generated by CoffeeScript 1.6.3
(function() {
  var errors, util,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  util = require('util');

  errors = require('./errors');

  module.exports = {
    ip_ntoa: function(ip) {
      return (ip & 0xFF) + '.' + ((ip >> 8) & 0xFF) + '.' + ((ip >> 16) & 0xFF) + '.' + ((ip >> 24) & 0xFF);
    },
    ip_aton: function(ip) {
      var parts;
      parts = ip.split('.');
      if (parts.length !== 4) {
        throw new errors.ParameterError('Invalid IP specified.');
      }
      return ((parseInt(parts[3], 10) << 24) >>> 0) + ((parseInt(parts[2], 10) << 16) >>> 0) + ((parseInt(parts[1], 10) << 8) >>> 0) + (parseInt(parts[0], 10) >>> 0);
    },
    bts_addr: function(ip, port) {
      return ip = ip_ntoa(ip);
    },
    stripKeys: function(object, allowedKeys) {
      var key, _, _i, _len, _ref;
      object = util._extend({}, object);
      for (_ = _i = 0, _len = object.length; _i < _len; _ = ++_i) {
        key = object[_];
        if (_ref = !key, __indexOf.call(allowedKeys, _ref) >= 0) {
          delete object[key];
        }
      }
      return object;
    }
  };

}).call(this);
